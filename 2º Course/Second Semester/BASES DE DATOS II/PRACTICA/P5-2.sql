-- 4 - A
    CREATE OR REPLACE TRIGGER CH_NUM_CICLISTA
    BEFORE INSERT OR UPDATE OF CODEQU ON CICLISTA
    FOR EACH ROW
    DECLARE
    CANT INTEGER;
    BEGIN
        SELECT COUNT(*) INTO CANT
        FROM CICLISTA
        WHERE CODEQU = :NEW.CODEQU;
        
        IF CANT > 10 THEN
            raise_application_error(-20001, 'el ciclista ' || :NEW.NOMBRE || ' no puede formar parte del equipo con código ' || :NEW.CODEQU || ', pues ya cuenta con el número máximo de ciclistas (11)');
        END IF;
    END;
    /
    
    DROP SEQUENCE CODCIC_SEQ;
    
    CREATE SEQUENCE codcic_seq MAXVALUE 1000 INCREMENT BY -1 START WITH 900;
    
    INSERT INTO CICLISTA (CODCIC, DORSAL, NOMBRE, EDAD, CODEQU) VALUES (CODCIC_SEQ.NEXTVAL, 200, 'Ruben Ortiz', 41, 3);
    
-- 4 - B
    
    CREATE OR REPLACE TRIGGER CH_NUM_CICLISTA
    AFTER INSERT OR UPDATE OF CODEQU ON CICLISTA
    -- FOR EACH ROW -- FOR EACH STATEMENT
    DECLARE
    CANT INTEGER;
    BEGIN
        SELECT MAX(COUNT(*)) INTO CANT
        FROM CICLISTA
        GROUP BY CODEQU;
        
        IF CANT > 11 THEN
            raise_application_error(-20001, 'alcanzado máximo numero de corredores, ningun equipo puede tener más de 11 corredores');
        END IF;
    END;
    /
    
    UPDATE CICLISTA SET CODEQU = 3 WHERE DORSAL = 3;
    
    
-- 5
    
    CREATE TABLE HISTORICOS (
        CODCIC NUMBER,
        DORSAL NUMBER,
        NOMBRE VARCHAR2(35),
        CODEQU NUMBER, 
        FECHA_BAJA DATE,
        
        CONSTRAINT PK_HISTORICOS PRIMARY KEY (CODCIC)
    );
    
    CREATE OR REPLACE TRIGGER BAJA_CICLISTA
    BEFORE DELETE ON CICLISTA
    FOR EACH ROW
    BEGIN
    INSERT INTO HISTORICOS VALUES (:OLD.CODCIC, :OLD.DORSAL, :OLD.NOMBRE, :OLD.CODEQU, SYSDATE);
    END;
    /
    
-- 6

DELETE FROM CICLISTA WHERE EDAD >= 36;
SELECT * FROM HISTORICOS;

-- 7

CREATE OR REPLACE TRIGGER ON_UPDATE_DORSAL_CASCADE
BEFORE UPDATE OF DORSAL ON CICLISTA
FOR EACH ROW
BEGIN

UPDATE PUERTO SET DORSAL = :NEW.DORSAL
WHERE DORSAL = :OLD.DORSAL;

UPDATE ETAPA SET DORSAL = :NEW.DORSAL
WHERE DORSAL = :OLD.DORSAL;

UPDATE LLEVA SET DORSAL = :NEW.DORSAL
WHERE DORSAL = :OLD.DORSAL;


UPDATE CICLISTA
SET DORSAL = DORSAL + 100
WHERE CODEQU = 3;

SELECT * FROM ESTADISTICAS;
SELECT * FROM ETAPA;









