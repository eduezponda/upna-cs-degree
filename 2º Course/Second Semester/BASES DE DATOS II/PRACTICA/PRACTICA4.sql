CREATE TABLE equipo ( 
 nomequipo    VARCHAR(20), 
 director     VARCHAR(35), 
 codequ       NUMBER,
 CONSTRAINT pk_equipo PRIMARY KEY (codequ),
 CONSTRAINT uq_equipo UNIQUE (nomequipo)
);

CREATE TABLE ciclista (
 dorsal       NUMBER, 
 nombre       VARCHAR(35), 
 edad         NUMBER, 
 codcic       NUMBER,
 codequ       NUMBER,
 CONSTRAINT PK_ciclista PRIMARY KEY (codcic),
 CONSTRAINT UQ_ciclista UNIQUE (dorsal),
 CONSTRAINT FK_cicl_equipo FOREIGN KEY (codequ) REFERENCES equipo ON DELETE SET NULL,
 CONSTRAINT ch_edad CHECK(edad BETWEEN 0 AND 65)
);

CREATE TABLE etapa (
 numetapa     NUMBER, 
 kms          NUMBER NOT NULL, 
 salida       VARCHAR(40), 
 llegada      VARCHAR(40), 
 dorsal       NUMBER, 
 codeta       NUMBER,
 CONSTRAINT pk_etapa PRIMARY KEY ( codeta ),
 CONSTRAINT uq_etapa UNIQUE ( numetapa ),
 CONSTRAINT FK_etapa_cicl FOREIGN KEY (dorsal) REFERENCES ciclista(dorsal) ON DELETE SET NULL
);

CREATE TABLE puerto (
 nompuerto    VARCHAR(35), 
 altura       NUMBER, 
 categoria    VARCHAR(1), 
 pendiente    REAL, 
 numetapa      NUMBER,
 dorsal       NUMBER,
 codpue       NUMBER,
 CONSTRAINT PK_puerto PRIMARY KEY (codpue),
 CONSTRAINT UQ_puerto UNIQUE (nompuerto),
 CONSTRAINT FK_puerto_cicl FOREIGN KEY (dorsal) REFERENCES ciclista(dorsal) ON DELETE SET NULL,
 CONSTRAINT FK_puerto_etapa FOREIGN KEY (numetapa) REFERENCES etapa(numetapa) ON DELETE CASCADE,
 CONSTRAINT ch_puerto_pos CHECK (altura>0),
 CONSTRAINT ch_categoria CHECK(categoria IN ('E', '1', '2', '3'))
 );

CREATE TABLE maillot (  
 codigo       VARCHAR(3), 
 tipo         VARCHAR(20), 
 color        VARCHAR(20), 
 premio       NUMBER, 
 CONSTRAINT pk_maillot PRIMARY KEY ( codigo )
);

CREATE TABLE lleva (  
 dorsal       NUMBER,
 numetapa      NUMBER, 
 codigo       VARCHAR(3), 
 CONSTRAINT pk_lleva PRIMARY KEY ( codigo, numetapa ),
 CONSTRAINT fk_lleva_maillot FOREIGN KEY ( codigo ) REFERENCES maillot ON DELETE CASCADE,
 CONSTRAINT FK_lleva_cicl FOREIGN KEY (dorsal) REFERENCES ciclista(dorsal) ON DELETE SET NULL,
 CONSTRAINT FK_lleva_etapa FOREIGN KEY (numetapa) REFERENCES etapa(numetapa) ON DELETE CASCADE
);

--3
CREATE OR REPLACE SYNONYM AUX_CICLISTA FOR CICLISMO.AUX_CICLISTA;
CREATE OR REPLACE SYNONYM AUX_EQUIPO FOR CICLISMO.AUX_EQUIPO;
CREATE OR REPLACE SYNONYM AUX_ETAPA FOR CICLISMO.AUX_ETAPA;
CREATE OR REPLACE SYNONYM AUX_LLEVA FOR CICLISMO.AUX_LLEVA;
CREATE OR REPLACE SYNONYM AUX_MAILLOT FOR CICLISMO.AUX_MAILLOT;
CREATE OR REPLACE SYNONYM AUX_PUERTO FOR CICLISMO.AUX_PUERTO;
--4
CREATE SEQUENCE CODEQU_SEQ;
CREATE SEQUENCE CODCIC_SEQ
START WITH 1000
MAXVALUE 1000
INCREMENT BY -1;
CREATE SEQUENCE CODETA_SEQ
START WITH 100
INCREMENT BY 10
MAXVALUE 1000
CYCLE;
CREATE SEQUENCE CODPUE_SEQ
START WITH 10;
SELECT CODCIC_SEQ.NEXTVAL FROM DUAL;
--5
INSERT INTO EQUIPO (CODEQU,NOMEQUIPO,DIRECTOR)
SELECT CODEQU_SEQ.NEXTVAL,NOMEQUIPO,DIRECTOR
FROM AUX_EQUIPO;

INSERT INTO CICLISTA (DORSAL,NOMBRE,EDAD,CODCIC,CODEQU) 
SELECT DORSAL, NOMBRE, EDAD, CODCIC_SEQ.NEXTVAL,(SELECT CODEQU FROM EQUIPO WHERE EQUIPO.NOMEQUIPO = AUX_CICLISTA.NOMEQUIPO)
FROM AUX_CICLISTA;
--LAS VISTAS NO TIENEN CODEQUIPO

INSERT INTO ETAPA (NUMETAPA,KMS,SALIDA,LLEGADA,DORSAL,CODETA)
SELECT NUMETAPA,KMS,SALIDA,LLEGADA,DORSAL,CODETA_SEQ.NEXTVAL
FROM AUX_ETAPA;

INSERT INTO PUERTO (NOMPUERTO,ALTURA,CATEGORIA,PENDIENTE,NUMETAPA,DORSAL,CODPUE)
SELECT NOMPUERTO,ALTURA,CATEGORIA,PENDIENTE,NUMETAPA,DORSAL,CODPUE_SEQ.NEXTVAL
FROM AUX_PUERTO;

INSERT INTO MAILLOT (CODIGO,TIPO,COLOR,PREMIO)
SELECT CODIGO, TIPO,COLOR, PREMIO
FROM AUX_MAILLOT;

INSERT INTO LLEVA(DORSAL,NUMETAPA,CODIGO)
SELECT DORSAL,NUMETAPA,CODIGO
FROM AUX_LLEVA;

--6
CREATE OR REPLACE VIEW VISTA_EQUIPOS AS (
SELECT *
FROM EQUIPO E
WHERE E.NOMEQUIPO LIKE '%A%');
SELECT *
FROM VISTA_EQUIPOS;

--7
ALTER TABLE EQUIPO ADD (PATROCINADOR VARCHAR2(50) DEFAULT 'Leia Organa',PRESUPUESTO NUMBER DEFAULT 500000);

--8
SELECT * FROM VISTA_EQUIPOS;
CREATE OR REPLACE VIEW VISTA_EQUIPOS AS (
SELECT *
FROM EQUIPO E
WHERE E.NOMEQUIPO LIKE '%A%');

--9
CREATE OR REPLACE VIEW TODOTERRENOS AS (
SELECT C.DORSAL, C.NOMBRE, C.EDAD, E.NOMEQUIPO
FROM CICLISTA C
JOIN EQUIPO E ON (C.CODEQU=E.CODEQU)
JOIN LLEVA L ON (C.DORSAL = L.DORSAL)
GROUP BY C.NOMBRE, C.DORSAL,C.EDAD,E.NOMEQUIPO
HAVING COUNT(DISTINCT L.CODIGO) = (SELECT MAX(COUNT(DISTINCT L.CODIGO))
                                  FROM LLEVA L
                                  GROUP BY L.DORSAL));
                                
--10

ALTER TABLE EQUIPO DROP COLUMN PATROCINADOR;
ALTER TABLE EQUIPO DROP COLUMN PRESUPUESTO;
SELECT * FROM VISTA_EQUIPOS;
--NO SE PUEDE PORQ HAS ELIMINADO LOS ATRIBUTOS DE LA TABLA PRINCIPAL POR LA Q HAS CREADO LA VISTA

--11
CREATE OR REPLACE VIEW MEDIAEDAD AS (
SELECT AVG(C.EDAD) EDADMEDIA
FROM CICLISTA C
WHERE DORSAL IN (SELECT E.DORSAL FROM ETAPA E));
--HAY Q DARLE UN NOMBRE AL ATRIBUTO

SELECT C.*
FROM CICLISTA C, MEDIAEDAD M
WHERE DORSAL IN (SELECT E.DORSAL FROM ETAPA E) AND C.EDAD < M.EDADMEDIA;

SELECT C.*
FROM CICLISTA C, MEDIAEDAD M
WHERE DORSAL IN (SELECT E.DORSAL FROM ETAPA E) AND C.EDAD > M.EDADMEDIA;

--12
CREATE OR REPLACE VIEW GANADORES_ETAPA AS(
SELECT DISTINCT C.*
FROM CICLISTA C, ETAPA E
WHERE C.DORSAL = E.DORSAL);

CREATE OR REPLACE VIEW CORONADORES_PUERTO AS(
SELECT DISTINCT C.*
FROM CICLISTA C, PUERTO P
WHERE C.DORSAL = P.DORSAL);

CREATE OR REPLACE VIEW PORTADORES_MAILLOT AS(
SELECT DISTINCT C.*
FROM CICLISTA C, LLEVA L, MAILLOT M
WHERE C.DORSAL = L.DORSAL AND L.CODIGO = M.CODIGO);


--2 OPCIONES
CREATE OR REPLACE VIEW COMPETITIVOS AS(
SELECT DISTINCT C.DORSAL, C.NOMBRE
FROM CICLISTA C, GANADORES_ETAPA G, CORONADORES_PUERTO P, PORTADORES_MAILLOT M
WHERE C.DORSAL = G.DORSAL OR C.DORSAL = P.DORSAL OR C.DORSAL = M.DORSAL);

CREATE OR REPLACE VIEW COMPETITIVOS AS(
SELECT DISTINCT DORSAL, NOMBRE
FROM CICLISTA C
WHERE C.DORSAL IN (SELECT DORSAL FROM GANADORES_ETAPA 
                    UNION SELECT DORSAL FROM CORONADORES_PUERTO 
                    UNION SELECT DORSAL FROM PORTADORES_MAILLOT));
                    
--13
CREATE OR REPLACE VIEW ETAPAS_REINA AS(
SELECT E.NUMETAPA ,E.KMS,E.SALIDA, E.LLEGADA, E.DORSAL
FROM ETAPA E
WHERE NUMETAPA IN (SELECT NUMETAPA
                    FROM PUERTO
                    WHERE CATEGORIA = 'E'
                    GROUP BY NUMETAPA
                    HAVING COUNT(*) > 1
                    UNION
                    SELECT NUMETAPA
                    FROM PUERTO P 
                    WHERE P.CATEGORIA = '1'
                    GROUP BY NUMETAPA
                    HAVING COUNT(*) > 1));
                    
SELECT NUMETAPA
FROM PUERTO
WHERE CATEGORIA = 'E'
GROUP BY NUMETAPA
HAVING COUNT(*) > 1
INTERSECT
SELECT NUMETAPA
FROM PUERTO P 
WHERE P.CATEGORIA = '1'
GROUP BY NUMETAPA
HAVING COUNT(*) > 1;

--14
CREATE VIEW TODABD AS( 
SELECT --PONER NOMBRE DE LOS ATRIBUTOS QUE QUIERES (TODOS LOS QUE SEAN DISTINTOS)
FROM EQUIPO E
FULL JOIN CICLISTA C ON (E.CODEQU = C.CODEQU)
FULL JOIN LLEVA L ON (C.DORSAL = L.DORSAL)
FULL JOIN MAILLOT M ON (L.CODIGO = M.CODIGO)
FULL JOIN ETAPA E ON (L.DORSAL = C.DORSAL) 
FULL JOIN PUERTO P ON (P.DORSAL = P.DORSAL));


