--2 
CREATE TABLE ESTADISTICAS (
    NOMBRE_TABLA VARCHAR2(30) ,
    NACTUALIZACIONES NUMBER, 
    NINSERCIONES NUMBER DEFAULT 0,
    NBORRADOS NUMBER DEFAULT 0,
    CONSTRAINT PK_ESTADISTICAS PRIMARY KEY (NOMBRE_TABLA)
);

INSERT INTO ESTADISTICAS (NOMBRE_TABLA) VALUES ('CICLISTA');
INSERT INTO ESTADISTICAS (NOMBRE_TABLA) VALUES ('EQUIPO');
INSERT INTO ESTADISTICAS (NOMBRE_TABLA) VALUES ('ETAPA');
INSERT INTO ESTADISTICAS (NOMBRE_TABLA) VALUES ('LLEVA');
INSERT INTO ESTADISTICAS (NOMBRE_TABLA) VALUES ('MAILLOT');
INSERT INTO ESTADISTICAS (NOMBRE_TABLA) VALUES ('PUERTO');

CREATE OR REPLACE TRIGGER CUENTA_MAN_CICLISTA
BEFORE INSERT OR UPDATE OR DELETE ON CICLISTA
BEGIN
    CASE
        WHEN INSERTING THEN UPDATE ESTADISTICAS SET NINSERCIONES = NINSERCIONES + 1
        WHERE NOMBRE_TABLA = 'CICLISTA';
        
        WHEN UPDATING THEN UPDATE ESTADISTICAS SET NACTUALIZACIONES = NACTUALIZACIONES + 1
        WHERE NOMBRE_TABLA = 'CICLISTA';      
        
        WHEN DELETING THEN UPDATE ESTADISTICAS SET NBORRADOS = NBORRADOS + 1
        WHERE NOMBRE_TABLA = 'CICLISTA';     
        
    END CASE;
END;
/
CREATE OR REPLACE TRIGGER CUENTA_MAN_EQUIPO
BEFORE INSERT OR UPDATE OR DELETE ON EQUIPO
BEGIN
    CASE
        WHEN INSERTING THEN UPDATE ESTADISTICAS SET NINSERCIONES = NINSERCIONES + 1
        WHERE NOMBRE_TABLA = 'EQUIPO';
        
        WHEN UPDATING THEN UPDATE ESTADISTICAS SET NACTUALIZACIONES = NACTUALIZACIONES + 1
        WHERE NOMBRE_TABLA = 'EQUIPO';      
        
        WHEN DELETING THEN UPDATE ESTADISTICAS SET NBORRADOS = NBORRADOS + 1
        WHERE NOMBRE_TABLA = 'EQUIPO';     
        
    END CASE;
END;

CREATE OR REPLACE TRIGGER CUENTA_MAN_ETAPA
BEFORE INSERT OR UPDATE OR DELETE ON ETAPA
BEGIN
    CASE
        WHEN INSERTING THEN UPDATE ESTADISTICAS SET NINSERCIONES = NINSERCIONES + 1
        WHERE NOMBRE_TABLA = 'ETAPA';
        
        WHEN UPDATING THEN UPDATE ESTADISTICAS SET NACTUALIZACIONES = NACTUALIZACIONES + 1
        WHERE NOMBRE_TABLA = 'ETAPA';      
        
        WHEN DELETING THEN UPDATE ESTADISTICAS SET NBORRADOS = NBORRADOS + 1
        WHERE NOMBRE_TABLA = 'ETAPA';     
        
    END CASE;
END;

CREATE OR REPLACE TRIGGER CUENTA_MAN_LLEVA
BEFORE INSERT OR UPDATE OR DELETE ON LLEVA
BEGIN
    CASE
        WHEN INSERTING THEN UPDATE ESTADISTICAS SET NINSERCIONES = NINSERCIONES + 1
        WHERE NOMBRE_TABLA = 'LLEVA';
        
        WHEN UPDATING THEN UPDATE ESTADISTICAS SET NACTUALIZACIONES = NACTUALIZACIONES + 1
        WHERE NOMBRE_TABLA = 'LLEVA';      
        
        WHEN DELETING THEN UPDATE ESTADISTICAS SET NBORRADOS = NBORRADOS + 1
        WHERE NOMBRE_TABLA = 'LLEVA';     
        
    END CASE;
END;

CREATE OR REPLACE TRIGGER CUENTA_MAN_MAILLOT
BEFORE INSERT OR UPDATE OR DELETE ON MAILLOT
BEGIN
    CASE
        WHEN INSERTING THEN UPDATE ESTADISTICAS SET NINSERCIONES = NINSERCIONES + 1
        WHERE NOMBRE_TABLA = 'MAILLOT';
        
        WHEN UPDATING THEN UPDATE ESTADISTICAS SET NACTUALIZACIONES = NACTUALIZACIONES + 1
        WHERE NOMBRE_TABLA = 'MAILLOT';      
        
        WHEN DELETING THEN UPDATE ESTADISTICAS SET NBORRADOS = NBORRADOS + 1
        WHERE NOMBRE_TABLA = 'MAILLOT';     
        
    END CASE;
END;

CREATE OR REPLACE TRIGGER CUENTA_MAN_PUERTO
BEFORE INSERT OR UPDATE OR DELETE ON PUERTO
BEGIN
    CASE
        WHEN INSERTING THEN UPDATE ESTADISTICAS SET NINSERCIONES = NINSERCIONES + 1
        WHERE NOMBRE_TABLA = 'PUERTO';
        
        WHEN UPDATING THEN UPDATE ESTADISTICAS SET NACTUALIZACIONES = NACTUALIZACIONES + 1
        WHERE NOMBRE_TABLA = 'PUERTO';      
        
        WHEN DELETING THEN UPDATE ESTADISTICAS SET NBORRADOS = NBORRADOS + 1
        WHERE NOMBRE_TABLA = 'PUERTO';     
        
    END CASE;
END;
/
--3
DROP SEQUENCE  codeta_seq;
DROP SEQUENCE  codpue_seq ;
CREATE SEQUENCE codeta_seq START WITH 2200 INCREMENT BY 100 MAXVALUE 10000 CYCLE; 
CREATE SEQUENCE codpue_seq START WITH 15;


CREATE OR REPLACE TRIGGER ALTA_PUERTO
AFTER INSERT ON ETAPA
FOR EACH ROW
BEGIN
    INSERT INTO PUERTO (CODPUE, NOMPUERTO, NUMETAPA) VALUES (codpue_seq.nextval, 'Puerto', :new.NUMETAPA);
END;
/

INSERT INTO ETAPA (NUMETAPA, KMS, SALIDA, LLEGADA, DORSAL, CODETA) VALUES ('22', '67', 'Pamplona', 'Javier', '2', codeta_seq.nextval);

SELECT * FROM ESTADISTICAS;

--4
CREATE OR REPLACE TRIGGER CH_NUM_CICLISTAS
BEFORE INSERT ON CICLISTA
FOR EACH ROW
DECLARE
CANT INTEGER;
BEGIN
SELECT count(*) INTO CANT
FROM CICLISTA
WHERE CODEQU = :NEW.CODEQU;
IF CANT > 10 THEN
raise_application_error (-20001,'el ciclista '||:NEW.NOMBRE||' no puede formar
parte del equipo con código '||:new.CODEQU||', pues ya cuenta con el número máximo de ciclistas
(11)');
END IF;
END;
/

CREATE OR REPLACE TRIGGER CH_NUM_CICLISTAS
AFTER INSERT OR UPDATE OF CODEQU ON CICLISTA
--FOR EACH ROW
DECLARE
CANT INTEGER;
BEGIN
SELECT MAX(count(*)) INTO CANT
FROM CICLISTA
GROUP BY CODEQU;
IF CANT > 11 THEN
raise_application_error (-20001,'el ciclista no puede formar
parte del equipo con código, pues ya cuenta con el número máximo de ciclistas
(11)');
END IF;
END;
/

DROP SEQUENCE codcic_seq;
CREATE SEQUENCE codcic_seq MAXVALUE 1000 INCREMENT BY -1 START WITH 900;

INSERT INTO CICLISTA (DORSAL,NOMBRE,EDAD,CODCIC,CODEQU) VALUES (200,'Ruben Ortiz',30, 5000, 3);
UPDATE CICLISTA SET codequ = 4 WHERE dorsal=3;
UPDATE CICLISTA SET codequ = 3 WHERE dorsal=3;

--5
CREATE TABLE HISTORICOS (
    CODIGOCIC NUMBER,
    DORSAL NUMBER,
    NOMBRE VARCHAR2(25),
    CODIGOEQU NUMBER,
    FECHABAJA DATE,
    CONSTRAINT PK_HISTORICOS PRIMARY KEY (CODIGOCIC)
);
DROP TABLE HISTORICOS;

CREATE OR REPLACE TRIGGER ELIMINAR_CICLISTA
BEFORE DELETE ON CICLISTA
FOR EACH ROW
BEGIN
    INSERT INTO HISTORICOS VALUES (:old.CODCIC, :OLD.DORSAL, :OLD.NOMBRE, :old.CODEQU,SYSDATE);
END;
/
--6

DELETE FROM CICLISTA WHERE EDAD >= 36;
SELECT * FROM HISTORICOS;

--7
CREATE OR REPLACE Trigger ON_UPDATE_DORSAL_CASCADE
BEFORE UPDATE OF DORSAL ON CICLISTA
FOR EACH ROW 
BEGIN
UPDATE PUERTO SET DORSAL =: NEW.DORSAL 
WHERE DORSAL = :OLD.DORSAL;
UPDATE ETAPA SET DORSAL =: NEW.DORSAL 
WHERE DORSAL = :OLD.DORSAL;
UPDATE LLEVA SET DORSAL =: NEW.DORSAL 
WHERE DORSAL = :OLD.DORSAL;
END;
/

UPDATE ESTADISTICAS SET NACTUALIZACIONES = 0 WHERE NACTUALIZACIONES IS NULL;
UPDATE CICLISTA SET DORSAL = DORSAL + 100 WHERE CODEQU = 3;

--8

INSERT INTO EQUIPO (NOMEQUIPO,CODEQU) VALUES ('SIN EQUIPO',1);

CREATE SEQUENCE codequ_seq START WITH 23;

CREATE OR REPLACE TRIGGER BAJA_EQUIPO
BEFORE DELETE ON EQUIPO
FOR EACH ROW
BEGIN
    UPDATE CICLISTA SET CODEQU = 1 WHERE CODEQU = :OLD.CODEQU;
END;
/
ALTER TABLE CICLISTA DROP CONSTRAINT FK_CICL_EQUIPO;
ALTER TABLE CICLISTA ADD CONSTRAINT FK_CICL_EQUIPO FOREIGN KEY (CODEQU) REFERENCES EQUIPO(CODEQU);

DELETE FROM EQUIPO WHERE NOMEQUIPO = 'ONCE';

SELECT * FROM ESTADISTICAS;

--9

CREATE OR REPLACE TRIGGER NO_ELIMINAR_SINEQUIPO
BEFORE DELETE OR UPDATE OF CODEQU ON EQUIPO
FOR EACH ROW
BEGIN
IF :OLD.NOMEQUIPO = 'SIN EQUIPO' THEN
        raise_application_error (-20002,'el equipo "' || :OLD.NOMEQUIPO || '" no
        se puede borrar ni cambiar su código');
END IF;
END;
/
DELETE FROM EQUIPO WHERE nomequipo='SIN EQUIPO';
UPDATE EQUIPO SET codequ=1 WHERE nomequipo='SIN EQUIPO';

--10
CREATE OR REPLACE TRIGGER ALTA_EQUIPO
AFTER INSERT ON EQUIPO
FOR EACH ROW
BEGIN 
UPDATE CICLISTA SET CODEQU = :OLD.CODEQU WHERE :OLD.CODEQU = 'SIN EQUIPO'

