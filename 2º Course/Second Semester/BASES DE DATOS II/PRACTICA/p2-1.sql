//1

SELECT C.NOMBRE FROM CLIENTES C
UNION
SELECT V.NOMBRE FROM VENDEDORES V ORDER BY NOMBRE ASC;

//2

SELECT CODPRO,NOMBRE FROM PROVINCIAS 
UNION 
SELECT CODPRO,NOMBRE FROM PUEBLOS
ORDER BY CODPRO;

//3

SELECT NOMBRE, DIRECCION FROM CLIENTES
INTERSECT
SELECT NOMBRE, DIRECCION FROM VENDEDORES;

//4

SELECT NOMBRE, DIRECCION FROM CLIENTES
MINUS
SELECT NOMBRE, DIRECCION FROM VENDEDORES;

//5

SELECT C.*, PU.NOMBRE "POBLACION", PR.NOMBRE "PROVINCIA"
FROM CLIENTES C
JOIN PUEBLOS PU ON (C.CODPUE = PU.CODPUE)
JOIN PROVINCIAS PR ON (PU.CODPRO = PR.CODPRO)
JOIN FACTURAS F ON (C.CODCLI = F.CODCLI)
WHERE F.CODFAC = 69;

//6

 SELECT C.CODCLI, C.NOMBRE, C.DIRECCION, PO.NOMBRE || '(' || PR.NOMBRE || ')' "POBLACION"
 FROM CLIENTES C
 JOIN  PUEBLOS PO ON (C.CODPUE = PO.CODPUE)
 JOIN PROVINCIAS PR ON (PO.CODPRO = PR.CODPRO)
 WHERE PR.NOMBRE IN ('VALENCIA', 'CASTELLON', 'ALICANTE');
 
 //7
 
 SELECT A.DESCRIP
 FROM ARTICULOS A
 MINUS
 SELECT A.DESCRIP FROM ARTICULOS A
 JOIN LINEAS_FAC L ON (A.CODART = L.CODART)
 JOIN VENDEDORES V ON (L.CODVEN = V.CODVEN)
 WHERE V.NOMBRE = 'MEDRANO FELIS, MIKEL';
 
 //8
 
 SELECT C.CODCLI, C.NOMBRE, F.CODFAC
 FROM CLIENTES C
 LEFT JOIN FACTURAS F ON (C.CODCLI = F.CODCLI);
 
 //9 Cuidado con el ej 9 y 10, y fijarse cuando te piden los proveedores de castellÃ³n. Si principio->where; else->join
 
 SELECT C.CODCLI, C.NOMBRE, F.CODFAC
 FROM CLIENTES C 
 LEFT OUTER JOIN FACTURAS F ON (C.CODCLI=F.CODCLI)
 JOIN PUEBLOS P ON (C.CODPUE = P.CODPUE)
 JOIN PROVINCIAS PR ON (P.CODPRO=PR.CODPRO)
 WHERE PR.NOMBRE = 'CASTELLON'
 ORDER BY C.CODCLI;
 
 //10
 
 SELECT C.CODCLI, C.NOMBRE, F.CODFAC
 FROM CLIENTES C 
 JOIN PUEBLOS P ON (C.CODPUE = P.CODPUE)
 JOIN PROVINCIAS PR ON P.CODPRO=PR.CODPRO
 ORDER BY C.CODCLI;
 
 //11 Cuidado con el orden de las claves primarias de vendedores v1 y v2
 
 SELECT V1.NOMBRE, V2.NOMBRE
 FROM VENDEDORES V1
 LEFT JOIN VENDEDORES V2 ON (V1.JEFE = V2.CODVEN)
 JOIN PUEBLOS P ON (V1.CODPUE = P.CODPUE) 
 JOIN PROVINCIAS PR ON (P.CODPRO = PR.CODPRO)
 WHERE PR.NOMBRE = 'CASTELLON';
 
 //12 FACTURA TIENE VARIAS LINEAS. ADEMAS COMO HACES SUM -> GROUP BY -> HAVING (EN ESTE CASO)
 
 SELECT C.CODCLI, C.NOMBRE, C.CODPOSTAL, SUM (L.CANT*L.PRECIO) "IMPORTE"
 FROM CLIENTES C
 JOIN FACTURAS F ON (C.CODCLI = F.CODCLI)
 JOIN LINEAS_FAC L ON (F.CODFAC = L.CODFAC)
 GROUP BY C.CODCLI, C.NOMBRE, C.CODPOSTAL
 HAVING SUM(L.CANT*L.PRECIO) >  6000
 ORDER BY C.CODCLI;
 
 //13
 Seleccionar el codigo y nombre de los clientes sin repeticiones que tienen alguna factura de dos lineas o mas que sean 
 de la provincia de Valencia
 
 UPPER -> Convierte a mayuscula para q no importe al comprobar
 
 //14 HAY Q HACER TODO LEFT JOIN PORQ SI NO PIERDES POR EL CAMINO(EN EL CASO DE QUE PONGAS EN EL FROM ARTICULOS). 
 SE PODRIA HACER SOLO LEFT JOIN A ARTICULOS PERO PONIENDO 
 ARTICULOS AL FINAL Y POR LO TANTO NO EN EL FROM
 
 SELECT A.CODART "CODIGO", A.DESCRIP "DESCRIPCION", COUNT(C.CODCLI)
 FROM ARTICULOS A
 LEFT JOIN LINEAS_FAC L ON (A.CODART = L.CODART)
 LEFT JOIN FACTURAS F ON (L.CODFAC = F.CODFAC)
 LEFT JOIN CLIENTES C ON (F.CODCLI = C.CODCLI)
 GROUP BY A.CODART, A.DESCRIP
 ORDER BY COUNT(C.CODCLI) DESC;
 
 //15 SE GUARDAN LOS NOMBRES DEL PRIMER OPERANDO (POBLACION)
 
 SELECT P.NOMBRE "POBLACION"
 FROM PUEBLOS P
 JOIN PROVINCIAS PR ON (P.CODPRO = PR.CODPRO)
 WHERE PR.NOMBRE = 'CASTELLON'
 INTERSECT
 SELECT P.NOMBRE 
 FROM PUEBLOS P
 JOIN PROVINCIAS PR ON (P.CODPRO = PR.CODPRO)
 WHERE PR.NOMBRE != 'CASTELLON';
 
 //16 YO PENSABA QUE NO HACE NADA EL MINUS,PERO SEGUN IKER QUITA UNO
 ADEMAS DICE QUE UNA FACTURA TIENE VARIAS LINEAS PERO UNA LINEA PUEDE ESTAR EN VARIAS FACTURAS
 
 MOSTRAR EL CODIGO DEL CLIENTE DE LAS LINEAS DE LAS FACTURAS QUE TENGAN UN PRECIO MAYOR QUE 2
 SOLUCION CREO: COGES FACTURAS QUE SOLO TENGAN LINEAS CON PRECIO > 2
 //17
 
 SELECT C.CODCLI, C.NOMBRE "CLIENTE", COUNT (DISTINCT(F.CODFAC)) "FACTURAS", COUNT ((L.LINEA)) "LINEAS"
 FROM CLIENTES C
 LEFT JOIN FACTURAS F ON (C.CODCLI = F.CODCLI)
 LEFT JOIN LINEAS_FAC L ON (F.CODFAC = L.CODFAC)
 GROUP BY C.CODCLI, C.NOMBRE
 ORDER BY FACTURAS DESC;
 
 //18
 
 SELECT A.CODART, A.DESCRIP "DESCRIPCION", L1.PRECIO "PRECIO_ANTERIOR", F1.FECHA "FECHA_ANTERIOR",
 L2.PRECIO "PRECIO_POSTERIOR", F2.FECHA "FECHA_POSTERIOR"
 FROM ARTICULOS A
 JOIN LINEAS_FAC L1 ON (A.CODART = L1.CODART)
 JOIN FACTURAS F1 ON (F1.CODFAC = L1.CODFAC)
 JOIN LINEAS_FAC L2 ON (A.CODART = L2.CODART)
 JOIN FACTURAS F2 ON (L2.CODFAC = F2.CODFAC)
 WHERE L1.PRECIO *1.1 < L2.PRECIO AND F1.FECHA < F2.FECHA;
 
 //19
 
 SELECT C.NOMBRE
 FROM CLIENTES C
 JOIN VENDEDORES V ON (C.CODPUE = V.CODPUE)
 WHERE C.NOMBRE = V.NOMBRE AND C.DIRECCION = V.DIRECCION AND C.CODPOSTAL = V.CODPOSTAL 
 ORDER BY C.NOMBRE;
 
 SELECT NOMBRE, DIRECCION, CODPOSTAL
 FROM CLIENTES
 INTERSECT 
 SELECT NOMBRE, DIRECCION, CODPOSTAL
 FROM VENDEDORES;
 
 SELECT NOMBRE
 FROM CLIENTES
 INTERSECT 
 SELECT NOMBRE
 FROM VENDEDORES;


 //20
 
 SELECT A.CODART, A.DESCRIP
 FROM FACTURAS F
 JOIN LINEAS_FAC L ON (L.CODFAC = F.CODFAC AND F.FECHA BETWEEN '1/1/2022' AND '31/12/2022')
 RIGHT JOIN ARTICULOS A ON (A.CODART = L.CODART)
 WHERE A.PRECIO > 90
 GROUP BY A.CODART, A.DESCRIP;
 
 SELECT A.CODART, A.DESCRIP
 FROM ARTICULOS A
 WHERE A.PRECIO > 90
 MINUS
 SELECT A.CODART, A.DESCRIP
 FROM ARTICULOS A
 JOIN LINEAS_FAC L ON (A.CODART = L.CODART)
 JOIN FACTURAS F ON (L.CODFAC = L.CODFAC)
 WHERE F.FECHA BETWEEN '1/1/2022' AND '31/12/2022'
 GROUP BY A.CODART, A.DESCRIP
 HAVING SUM(L.CANT) >= 10;
 
//21

SELECT PR.NOMBRE, COUNT(DISTINCT F.CODCLI)
FROM PROVINCIAS PR
LEFT JOIN PUEBLOS P ON (PR.CODPRO = P.CODPRO)
LEFT JOIN CLIENTES C ON (C.CODPUE = P.CODPUE)
LEFT JOIN FACTURAS F ON (C.CODCLI = F.CODCLI AND EXTRACT(YEAR FROM F.FECHA) = '2022' AND F.IVA != 0 AND F.IVA IS NOT NULL)
GROUP BY PR.NOMBRE
ORDER BY PR.NOMBRE;

 
 
 
 
 
